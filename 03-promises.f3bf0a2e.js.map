{"mappings":"gfAAAA,EAAA,SAGC,IAAMC,EAASC,SAASC,cAAc,SAEtCF,EAAOG,iBAAiB,UAExB,SAAsBC,GACrBA,EAAMC,iBACN,IAAIC,EAAM,EAEVC,YAAW,WACX,IAAMC,EAAaC,aAAY,WAC/B,IAmBqBC,EAAUC,EAnBzBC,EAAQC,OAAOb,EAAOc,SAASH,MAAMI,OAASF,OAAOb,EAAOc,SAASE,KAAKD,OAE3ET,IAASO,OAAOb,EAAOc,SAASG,OAAOF,QACxCG,cAAcV,IAgBGE,EAbPJ,EAaiBK,EAbVC,EAcd,IAAIO,SAAS,SAACC,EAAKC,GACAC,KAAKC,SAAW,GAEpCH,EAAK,CAACV,WAAUC,UAEhBU,EAAK,CAACX,WAAUC,S,KAlBrBa,MAAK,SAAAC,G,IAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MACjBe,QAAQC,IAAI,uBAAwCC,OAAflB,EAAS,QAAYkB,OAANjB,EAAM,M,IAE3DkB,OAAM,SAAAJ,G,IAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MAClBe,QAAQC,IAAI,sBAAqCC,OAAflB,EAAS,QAAYkB,OAANjB,EAAM,M,IAEzDL,GAAQ,C,GAELO,OAAOb,EAAOc,SAASE,KAAKD,O,GAC7BF,OAAOb,EAAOc,SAASH,MAAMI,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\n const formEl = document.querySelector(\".form\");\n \n formEl.addEventListener(\"submit\", onSubmitForm);\n\n function onSubmitForm(event){  \n  event.preventDefault();\n  let count=1;\n\n  setTimeout(()=>{\n  const intervalId = setInterval(()=>{\n  const delay = Number(formEl.elements.delay.value) + Number(formEl.elements.step.value);\n\n    if(count=== Number(formEl.elements.amount.value)){\n      clearInterval(intervalId);\n    }\n    \n  createPromise(count, delay)      \n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  count +=1 ;\n \n  }, Number(formEl.elements.step.value)); \n }, Number(formEl.elements.delay.value));   \n };\n\nfunction createPromise(position, delay) {\n  return new Promise ((res, rej)=>{ \n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res ({position, delay});\n      } else {\n        rej ({position, delay});\n      }   \n  });  \n}\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","addEventListener","event","preventDefault","count","setTimeout","intervalId","setInterval","position","delay","delay1","Number","elements","value","step","amount","clearInterval","Promise","res","rej","Math","random","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.f3bf0a2e.js.map"}