{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGC,MAAMC,EAASC,SAASC,cAAc,SA2BvC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAI,C,SAAEH,E,MAAUC,IAEhBG,EAAI,C,SAAEJ,E,MAAUC,GAAQ,GAEzBD,EAAWC,EAAM,G,CAlCvBL,EAAOY,iBAAiB,UAEvB,SAAsBC,GACtBA,EAAMC,iBAEN,MAAMC,EAAaC,OAAOhB,EAAOiB,SAASZ,MAAMa,OAC1CC,EAAYH,OAAOhB,EAAOiB,SAASG,KAAKF,OACxCG,EAASL,OAAOhB,EAAOiB,SAASI,OAAOH,OAE7CT,YAAW,KAET,IAAK,IAAIa,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC9BnB,EAAcmB,EAAGH,GACfI,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MAChBmB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBtB,EAAY,QAAQA,EAAUC,EAAQU,MAAgB,IAErGY,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoBxB,EAAU,QAAQA,EAAUC,EAAOU,MAAgB,GAC/F,GAINA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\n const formEl = document.querySelector(\".form\");\n \n formEl.addEventListener(\"submit\", onSubmitForm);\n\n  function onSubmitForm(event) {\n  event.preventDefault();\n\n  const firstDelay = Number(formEl.elements.delay.value);\n  const stepDelay = Number(formEl.elements.step.value);\n  const amount = Number(formEl.elements.amount.value);\n\n  setTimeout(() => {  \n    \n    for (let i = 0; i < amount; i += 1) {\n       createPromise(i, stepDelay)\n        .then(({ position, delay}) => {\n           Notiflix.Notify.success(`✅ Fulfilled promise ${position +1} in ${position * delay + firstDelay}ms`);\n         })\n        .catch(({ position, delay}) => {\n           Notiflix.Notify.failure(`❌ Rejected promise ${position +1} in ${position* delay + firstDelay}ms`);\n         }); \n\n      }\n  \n  }, firstDelay);  \n};\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => { \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, position * delay);       \n  });  \n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","addEventListener","event","preventDefault","firstDelay","Number","elements","value","stepDelay","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.249218b8.js.map"}